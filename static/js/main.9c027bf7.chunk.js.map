{"version":3,"sources":["components/documentation/DocumentComponent.js","components/generic/FlexDivs/FlexColumn.js","components/generic/Background/Background.js","components/generic/Button/NeonButtons.js","components/generic/FlexDivs/FlexRow.js","components/generic/Button/Button.js","components/generic/Incrementer/Incrementer.js","components/generic/Input/Input.js","components/generic/Paragraph/NeonParagraph.js","views/DocumentationView.js","components/Context/TimersContext.js","components/Context/MenuContext.js","components/timers/Stopwatch.js","components/timers/Countdown.js","components/timers/XY.js","components/timers/Tabata.js","views/TimersView.js","App.js","index.js"],"names":["Wrapper","styled","div","Container","Title","RenderComponent","Documentation","table","DocumentComponent","this","props","title","component","propDocs","map","doc","prop","description","type","defaultValue","React","Component","styles","justifyContent","alignItems","alignContent","FlexColumn","style","display","backgroundColor","color","width","height","flexDirection","margin","padding","boxSizing","spaceEvenly","className","children","defaultProps","Background","borderRadius","centered","spaceAround","class","NeonButton","onClick","textAlign","cursor","disabled","selected","text","image","FlexRow","flexWrap","Button","fontSize","Incrementer","changeTime","direction","maxMin","value","onChange","max","e","target","isNaN","min","addZeros","scale","Input","NeonParagraph","textShadow","size","TimerContext","createContext","TimerProvider","useState","milleseconds","setMilleseconds","seconds","setSeconds","minutes","setMinutes","hours","setHours","totalSeconds","setTotalSeconds","initialTime","setInitialTime","timerID","setTimerID","currentState","setCurrentState","work","setWork","rest","setRest","initialWork","setInitialWork","initialRest","setInitialRest","round","setRound","Provider","MenuContext","MenuProvider","stopwatch","setStopwatch","countdown","setCountdown","xy","setXY","tabata","setTabata","menu","setMenu","Stopwatch","useContext","isActive","setIsActive","timer","useRef","completed","setCompleted","useEffect","current","setInterval","convertSecondsToTimer","clearInterval","ConvertedSeconds","Math","floor","hoursRemainder","minutesRemainder","secondsRemainder","Countdown","showUI","setShowUI","console","log","convertTimerToSeconds","initialSeconds","XY","stop","Tabata","App","to","path","DocumentationView","TimersView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c027bf7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  border: 1px solid #121212;\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 20px;\r\n  font-size: 1.3rem;\r\n`;\r\n\r\nconst RenderComponent = styled.div`\r\n  padding: 25px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Documentation = styled.table``;\r\n\r\nclass DocumentComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <Title>{this.props.title}</Title>\r\n        <Container>\r\n          <RenderComponent>{this.props.component}</RenderComponent>\r\n          <Documentation>\r\n            <tr>\r\n              <th>Prop</th>\r\n              <th>Description</th>\r\n              <th>Type</th>\r\n              <th>Default value</th>\r\n            </tr>\r\n            {this.props.propDocs.map((doc) => {\r\n              return (\r\n                <tr>\r\n                  <td>{doc.prop}</td>\r\n                  <td>{doc.description}</td>\r\n                  <td>{doc.type}</td>\r\n                  <td>\r\n                    <code>{doc.defaultValue}</code>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </Documentation>\r\n        </Container>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DocumentComponent;\r\n","\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = {\r\n  centered: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    alignContent: \"center\",\r\n  },\r\n  spaceEvenly: {\r\n    justifyContent: \"space-around\",\r\n    alignContent: \"space-around\",\r\n  },\r\n};\r\n\r\nconst FlexColumn = props => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          backgroundColor: props.color,\r\n          width: props.width,\r\n          height: props.height,\r\n          flexDirection: \"column\",\r\n          margin: props.margin,\r\n          padding: props.padding,\r\n          alignItems: \"center\",\r\n          alignContent: \"center\",\r\n          boxSizing: \"border-box\",\r\n          justifyContent: props.spaceEvenly ? styles.spaceEvenly.justifyContent : styles.centered.justifyContent\r\n        }}\r\n        className=\"Flex-Column\"\r\n      >\r\n        {props.children}\r\n      </div>\r\n    );\r\n}\r\n\r\nFlexColumn.propTypes = {\r\n  color: PropTypes.string,\r\n  width: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number\r\n  ]),\r\n  height: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number\r\n  ]),\r\n  margin: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number\r\n  ]),\r\n  padding: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number\r\n  ]),\r\n  spaceEvenly: PropTypes.string,\r\n}\r\n\r\nFlexColumn.defaultProps = {\r\n  color: \"none\",\r\n  width: \"auto\",\r\n  height: \"auto\",\r\n  margin: \"0px;\",\r\n  padding: \"0px\",\r\n  spaceEvenly: \"false\"\r\n}\r\n\r\nexport default FlexColumn;\r\n","import \"./Background.css\";\r\nimport FlexColumn from \"../FlexDivs/FlexColumn.js\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Background = (props) => {\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          backgroundColor: \"black\",\r\n          width: props.width,\r\n          height: props.height,\r\n          flexDirection: \"column\",\r\n          padding: props.padding,\r\n          borderRadius: \"25px\",\r\n        }}\r\n        className=\"Background\"\r\n      >\r\n        <FlexColumn\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          centered=\"true\"\r\n          spaceAround=\"true\"\r\n        >\r\n          <div class=\"container\">\r\n            <FlexColumn\r\n              padding=\"10px\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              spaceAround=\"true\"\r\n            >\r\n              {props.children}\r\n            </FlexColumn>\r\n            <div class=\"frame\"></div>\r\n            <div class=\"frame\"></div>\r\n            <div class=\"frame\"></div>\r\n            <div class=\"frame\"></div>\r\n            <div class=\"frame\"></div>\r\n            <div class=\"frame\"></div>\r\n            <div class=\"frame\"></div>\r\n            <div class=\"frame\"></div>\r\n            <div class=\"frame\"></div>\r\n            <div class=\"frame\"></div>\r\n            <div class=\"frame\"></div>\r\n            <div class=\"frame\"></div>\r\n            <div class=\"frame\"></div>\r\n            <div class=\"frame\"></div>\r\n          </div>\r\n        </FlexColumn>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nBackground.propTypes = {\r\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  padding: PropTypes.string,\r\n};\r\n\r\nBackground.defaultProps = {\r\n  width: 300,\r\n  height: 400,\r\n  padding: \"10px\",\r\n};\r\n\r\nexport default Background;\r\n","\r\nimport \"./NeonButtons.css\"\r\nimport PropTypes from 'prop-types';\r\n\r\nconst NeonButton = props => {\r\n    return (\r\n      <button\r\n        onClick={props.onClick}\r\n        style={\r\n          {\r\n            boxSizing: \"border-box\",\r\n            textAlign: \"center\",\r\n            width: props.width,\r\n            height: props.height,\r\n            cursor: props.disabled && \"auto\",\r\n            borderRadius: \"30px\",\r\n          }\r\n        }\r\n        className={props.className}\r\n        disabled={props.disabled}\r\n        selected={props.selected}\r\n\r\n      >\r\n        {props.text}\r\n        {props.image}\r\n        {props.children}\r\n      </button>\r\n    )\r\n}\r\n\r\nNeonButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  width: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number\r\n  ]),\r\n  height: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number\r\n  ]),\r\n  className: PropTypes.string,\r\n  disabled: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\r\n}\r\n\r\nNeonButton.defaultProps = {\r\n  width: 50,\r\n  height: \"50px\",\r\n  className: \"StartButton\",\r\n  disabled: false,\r\n}\r\n\r\n\r\nexport default NeonButton;","\r\nimport PropTypes from 'prop-types';\r\nconst styles = {\r\n  centered: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    alignContent: \"center\",\r\n  },\r\n  spaceEvenly: {\r\n    justifyContent: \"space-around\",\r\n    alignContent: \"space-around\",\r\n  },\r\n};\r\n\r\nconst FlexRow = props => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          backgroundColor: props.color,\r\n          width: props.width,\r\n          height: props.height,\r\n          flexDirection: \"row\",\r\n          flexWrap: \"wrap\",\r\n          margin: props.margin,\r\n          padding: props.padding,\r\n          alignItems: \"center\",\r\n          alignContent: \"center\",\r\n          boxSizing: \"border-box\",\r\n          justifyContent: props.spaceEvenly ? styles.spaceEvenly.justifyContent : styles.centered.justifyContent\r\n        }}\r\n        className=\"Flex-Column\"\r\n      >\r\n        {props.children}\r\n      </div>\r\n    );\r\n}\r\n\r\nFlexRow.propTypes = {\r\n  color: PropTypes.string,\r\n  width: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number\r\n  ]),\r\n  height: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number\r\n  ]),\r\n  margin: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number\r\n  ]),\r\n  padding: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number\r\n  ]),\r\n  spaceEvenly: PropTypes.string,\r\n}\r\n\r\nFlexRow.defaultProps = {\r\n  color: \"none\",\r\n  width: \"auto\",\r\n  height: \"auto\",\r\n  margin: \"0px;\",\r\n  padding: \"0px\",\r\n  spaceEvenly: \"false\"\r\n}\r\n\r\n\r\nexport default FlexRow;\r\n","\r\nimport \"./Button.css\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = props => {\r\n\r\n    return (\r\n      <button\r\n        onClick={props.onClick}\r\n        style={\r\n          {\r\n            boxSizing: \"border-box\",\r\n            textAlign: \"center\",\r\n            backgroundColor: props.color,\r\n            width: props.width,\r\n            height: props.height,\r\n            cursor: props.disabled && \"auto\",\r\n            borderRadius: \"30px\",\r\n            fontSize: \"auto\"\r\n          }\r\n        }\r\n        className={props.className}\r\n        disabled={props.disabled}\r\n        selected={props.selected}\r\n\r\n      >\r\n        {props.image}\r\n        {props.children}\r\n      </button>\r\n    )\r\n  \r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  color: PropTypes.string,\r\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  className: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  selected: PropTypes.bool,\r\n}\r\n\r\nButton.defaultProps = {\r\n  width: \"50px\",\r\n  height: \"50px\",\r\n  className: \"Default-button\",\r\n  disabled: false,\r\n  selected: false,\r\n  color: \"black\"\r\n}\r\n\r\nexport default Button;","import Button from \"../Button/Button\";\r\nimport FlexColumn from \"../FlexDivs/FlexColumn\";\r\nimport FlexRow from \"../FlexDivs/FlexRow\";\r\nimport \"./Incrementer.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../Input/Input.css\";\r\n\r\nconst Incrementer = (props) => {\r\n  const changeTime = (direction, maxMin) => {\r\n    if (direction === \"increment\") {\r\n      if (props.value < maxMin) {\r\n        props.onChange(props.value + 1);\r\n      }\r\n    } else {\r\n      if (props.value > maxMin) {\r\n        props.onChange(props.value - 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Add leading zeros\r\n  // src: https://www.codegrepper.com/code-examples/javascript/react+js+add+leading+zeros\r\n\r\n  function padLeadingZeros(num, size) {\r\n    var s = num + \"\";\r\n    while (s.length < size) s = \"0\" + s;\r\n    return s;\r\n  }\r\n  // examples:\r\n  // padLeadingZeros(57, 3);// \"057\"\r\n  // padLeadingZeros(57, 4); //\"0057\"\r\n\r\n  return (\r\n    <>\r\n      <FlexColumn\r\n        padding=\"10px\"\r\n        width=\"auto\"\r\n        height=\"auto\"\r\n        centered=\"true\"\r\n        spaceEvenly=\"true\"\r\n        margin={props.margin}\r\n      >\r\n        <FlexRow width=\"auto\" height=\"auto\" spaceEvenly=\"true\" centered=\"true\">\r\n          <Button\r\n            onClick={() => {\r\n              changeTime(\"increment\", props.max);\r\n            }}\r\n            className=\"smallButton\"\r\n            width={props.width / 2}\r\n            height={props.height / 2}\r\n          >\r\n            ^\r\n          </Button>\r\n        </FlexRow>\r\n        <FlexRow width=\"auto\" height=\"auto\" centered=\"true\">\r\n          <input\r\n            style={{\r\n              boxSizing: \"border-box\",\r\n              textAlign: \"center\",\r\n              width: props.width,\r\n              height: props.height,\r\n              cursor: \"auto\",\r\n              borderRadius: \"30px\",\r\n              fontSize: \"auto\",\r\n            }}\r\n            value={props.value}\r\n            onChange={(e) => {\r\n              const value = e.target.value;\r\n              if (!isNaN(+value)) {\r\n                if (\r\n                  +value <= props.max &&\r\n                  +value >= props.min\r\n                ) {\r\n                  props.onChange(e.target.value);\r\n                }\r\n              }\r\n            }}\r\n            className=\"display\"\r\n          ></input>\r\n        </FlexRow>\r\n        <FlexRow width=\"auto\" height=\"auto\" spaceEvenly=\"true\" centered=\"true\">\r\n          <Button\r\n            onClick={() => changeTime(\"decrease\", props.min)}\r\n            className=\"smallButton\"\r\n            width={props.width / 2}\r\n            height={props.height / 2}\r\n          >\r\n            v\r\n          </Button>\r\n        </FlexRow>\r\n      </FlexColumn>\r\n    </>\r\n  );\r\n};\r\n\r\nIncrementer.propTypes = {\r\n  color: PropTypes.string,\r\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  max: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  min: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  addZeros: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  scale: PropTypes.string,\r\n  margin: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  padding: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  onChange: PropTypes.func,\r\n  value: PropTypes.number,\r\n};\r\n\r\nIncrementer.defaultProps = {\r\n  width: 50,\r\n  height: 50,\r\n  max: 10,\r\n  min: 0,\r\n  addZeros: 0,\r\n  scale: \"\",\r\n  margin: \"0px\",\r\n  padding: \"0px\",\r\n  value: 0,\r\n};\r\n\r\nexport default Incrementer;\r\n","import PropTypes from 'prop-types';\r\nimport \"./Input.css\"\r\n\r\nexport const Input = props => {\r\n\r\n \r\n\r\n  return (\r\n    <input\r\n      style={\r\n        {\r\n          boxSizing: \"border-box\",\r\n          textAlign: \"center\",\r\n          width: props.width,\r\n          height: props.height,\r\n          cursor: \"auto\",\r\n          borderRadius: \"30px\",\r\n          fontSize: \"auto\"\r\n        }\r\n      }\r\n      value={props.value}\r\n      onChange={props.onChange}\r\n      className=\"display\"\r\n    >\r\n    </input>\r\n  )\r\n}\r\n\r\n\r\nInput.propTypes = {\r\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  value: PropTypes.number,\r\n  onChange: PropTypes.string\r\n}\r\n\r\nInput.defaultProps = {\r\n  width: 50,\r\n  height: 50,\r\n  value: 0\r\n}\r\n\r\nexport default Input;","import \"./NeonParagraph.css\"\r\nimport PropTypes from 'prop-types';\r\n\r\nconst NeonParagraph = props => {\r\n\r\n    return <p style={{\r\n        color: props.color,\r\n        textShadow: `0 0 10px ${props.color}`,\r\n        fontSize: props.size,\r\n        className: \"NeonParagraph\",\r\n        height: props.height,\r\n        width: props.width,\r\n        margin: \"0px\",\r\n        padding: props.padding,\r\n        boxSizing: \"border-box\"\r\n    }}>{props.children}</p>;\r\n  }\r\n\r\nNeonParagraph.propTypes = {\r\n  color: PropTypes.string,\r\n  width: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number\r\n  ]),\r\n  height: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number\r\n  ]),\r\n  size: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number\r\n  ]),\r\n  padding: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number\r\n  ])\r\n}\r\n\r\nNeonParagraph.defaultProps = {\r\n  color: \"Blue\",\r\n  width: \"auto\",\r\n  height: \"auto\",\r\n  size: \"24px\",\r\n  padding: \"10px\"\r\n}\r\n\r\nexport default NeonParagraph;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport DocumentComponent from \"../components/documentation/DocumentComponent\";\r\nimport Background from \"../components/generic/Background/Background\";\r\nimport NeonButton from \"../components/generic/Button/NeonButtons\";\r\nimport FlexColumn from \"../components/generic/FlexDivs/FlexColumn.js\"\r\nimport FlexRow from \"../components/generic/FlexDivs/FlexRow\";\r\nimport Incrementer from \"../components/generic/Incrementer/Incrementer\";\r\nimport Input from \"../components/generic/Input/Input\";\r\nimport NeonParagraph from \"../components/generic/Paragraph/NeonParagraph\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 2rem;\r\n`;\r\n\r\nclass Documentation extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div>\r\n          <Title>Documentation</Title>\r\n          <DocumentComponent\r\n            title=\"NeonButton\"\r\n            component={<NeonButton>btn</NeonButton>}\r\n            propDocs={[\r\n              {\r\n                prop: \"onClick\",\r\n                description: \"Method that runs when button is clicked\",\r\n                type: \"func\",\r\n                defaultValue: \"none\",\r\n              },\r\n              {\r\n                prop: \"width\",\r\n                description: \"Width of button\",\r\n                type: \"string, number\",\r\n                defaultValue: \"50, 50px\",\r\n              },\r\n              {\r\n                prop: \"height\",\r\n                description: \"Height of button\",\r\n                type: \"string, number\",\r\n                defaultValue: \"50, 50px\",\r\n              },\r\n              {\r\n                prop: \"className\",\r\n                description: `Use to change the style of the Button. \r\n                Currently available options include: StartButton, ClearButton, PauseButton, RestartButton, display, smallButton`,\r\n                type: \"string\",\r\n                defaultValue: \"StartButton\",\r\n              },\r\n              {\r\n                prop: \"disabled\",\r\n                description: \"Choose whether button is disabled (clickable)\",\r\n                type: \"bool\",\r\n                defaultValue: \"false\",\r\n              },\r\n            ]}\r\n          />\r\n          <DocumentComponent\r\n            title=\"Input\"\r\n            component={<Input/>}\r\n            propDocs={[\r\n              {\r\n                prop: \"width\",\r\n                description: \"Width of Input\",\r\n                type: \"string, number\",\r\n                defaultValue: \"50, 50px\",\r\n              },\r\n              {\r\n                prop: \"height\",\r\n                description: \"Height of Input\",\r\n                type: \"string, number\",\r\n                defaultValue: \"50, 50px\",\r\n              },\r\n              {\r\n                prop: \"disabled\",\r\n                description: \"Choose whether button is disabled (clickable)\",\r\n                type: \"bool\",\r\n                defaultValue: \"false\",\r\n              },\r\n            ]}\r\n          />\r\n          <DocumentComponent\r\n            title=\"FlexColumn\"\r\n            component={<FlexColumn><NeonButton>btn</NeonButton><NeonButton className=\"RestartButton\">btn</NeonButton><NeonButton className=\"ClearButton\">btn</NeonButton></FlexColumn>}\r\n            propDocs={[\r\n              {\r\n                prop: \"color\",\r\n                description: \"Changes the color of the background\",\r\n                type: \"string\",\r\n                defaultValue: \"white\",\r\n              },\r\n              {\r\n                prop: \"width\",\r\n                description: \"Width of div\",\r\n                type: \"string, number\",\r\n                defaultValue: \"auto\",\r\n              },\r\n              {\r\n                prop: \"height\",\r\n                description: \"Height of div\",\r\n                type: \"string, number\",\r\n                defaultValue: \"auto\",\r\n              },\r\n              {\r\n                prop: \"margin\",\r\n                description: \"Margin of div\",\r\n                type: \"string, number\",\r\n                defaultValue: \"0px\",\r\n              },\r\n              {\r\n                prop: \"padding\",\r\n                description: \"padding of div\",\r\n                type: \"string, number\",\r\n                defaultValue: \"10px\",\r\n              },\r\n              {\r\n                prop: \"spaceEvenly\",\r\n                description: \"determines whether to space child content evenly. If 'false', center the content\",\r\n                type: \"string\",\r\n                defaultValue: \"false\",\r\n              },\r\n            ]}\r\n          />\r\n          <DocumentComponent\r\n            title=\"FlexRow\"\r\n            component={<FlexRow><NeonButton>btn</NeonButton><NeonButton className=\"RestartButton\">btn</NeonButton><NeonButton className=\"ClearButton\">btn</NeonButton></FlexRow>}\r\n            propDocs={[\r\n              {\r\n                prop: \"color\",\r\n                description: \"Changes the color of the background\",\r\n                type: \"string\",\r\n                defaultValue: \"white\",\r\n              },\r\n              {\r\n                prop: \"width\",\r\n                description: \"Width of div\",\r\n                type: \"string, number\",\r\n                defaultValue: \"auto\",\r\n              },\r\n              {\r\n                prop: \"height\",\r\n                description: \"Height of div\",\r\n                type: \"string, number\",\r\n                defaultValue: \"auto\",\r\n              },\r\n              {\r\n                prop: \"margin\",\r\n                description: \"Margin of div\",\r\n                type: \"string, number\",\r\n                defaultValue: \"0px\",\r\n              },\r\n              {\r\n                prop: \"padding\",\r\n                description: \"padding of div\",\r\n                type: \"string, number\",\r\n                defaultValue: \"10px\",\r\n              },\r\n              {\r\n                prop: \"spaceEvenly\",\r\n                description: \"determines whether to space child content evenly. If 'false', center the content\",\r\n                type: \"string\",\r\n                defaultValue: \"false\",\r\n              },\r\n            ]}\r\n          />\r\n           <DocumentComponent\r\n            title=\"NeonParagraph\"\r\n            component={<NeonParagraph>Neon Text</NeonParagraph>}\r\n            propDocs={[\r\n              {\r\n                prop: \"color\",\r\n                description: \"Changes the color of the text\",\r\n                type: \"string\",\r\n                defaultValue: \"Blue\",\r\n              },\r\n              {\r\n                prop: \"width\",\r\n                description: \"Width of text container\",\r\n                type: \"string, number\",\r\n                defaultValue: \"auto\",\r\n              },\r\n              {\r\n                prop: \"height\",\r\n                description: \"Height of text container\",\r\n                type: \"string, number\",\r\n                defaultValue: \"auto\",\r\n              },\r\n              {\r\n                prop: \"size\",\r\n                description: \"Size of text\",\r\n                type: \"string, number\",\r\n                defaultValue: \"24px\",\r\n              },\r\n              {\r\n                prop: \"padding\",\r\n                description: \"padding of text container\",\r\n                type: \"string, number\",\r\n                defaultValue: \"10px\",\r\n              },\r\n            ]}\r\n          />\r\n          <DocumentComponent\r\n            title=\"Incrementer\"\r\n            component={<Incrementer/>}\r\n            propDocs={[\r\n              {\r\n                prop: \"max\",\r\n                description: \"Max number the counter will increase to\",\r\n                type: \"number\",\r\n                defaultValue: \"10\",\r\n              },\r\n              {\r\n                prop: \"max\",\r\n                description: \"Min number the counter will decrease to\",\r\n                type: \"number\",\r\n                defaultValue: \"0\",\r\n              },\r\n              {\r\n                prop: \"addZeros\",\r\n                description: \"Display will always display this many numbers (example: setting addZeros to 2 will make 5 display as 05)\",\r\n                type: \"number\",\r\n                defaultValue: \"0\",\r\n              },\r\n              {\r\n                prop: \"scale\",\r\n                description: \"Character that appears besides number indicator display a scale (min, m, sec, s)\",\r\n                type: \"string\",\r\n                defaultValue: \"\",\r\n              },\r\n              {\r\n                prop: \"width\",\r\n                description: \"Width of object\",\r\n                type: \"string, number\",\r\n                defaultValue: \"auto\",\r\n              },\r\n              {\r\n                prop: \"height\",\r\n                description: \"Height of object\",\r\n                type: \"string, number\",\r\n                defaultValue: \"auto\",\r\n              },\r\n              {\r\n                prop: \"padding\",\r\n                description: \"padding of object\",\r\n                type: \"string, number\",\r\n                defaultValue: \"10px\",\r\n              },\r\n              {\r\n                prop: \"margin\",\r\n                description: \"Margin of object\",\r\n                type: \"string, number\",\r\n                defaultValue: \"0px\",\r\n              },\r\n            ]}\r\n          />\r\n          <DocumentComponent\r\n            title=\"Background\"\r\n            component={<Background/>}\r\n            propDocs={[\r\n              {\r\n                prop: \"width\",\r\n                description: \"Width of object\",\r\n                type: \"string, number\",\r\n                defaultValue: \"300\",\r\n              },\r\n              {\r\n                prop: \"height\",\r\n                description: \"Height of object\",\r\n                type: \"string, number\",\r\n                defaultValue: \"400\",\r\n              },\r\n              {\r\n                prop: \"padding\",\r\n                description: \"padding of object\",\r\n                type: \"string, number\",\r\n                defaultValue: \"10px\",\r\n              }\r\n            ]}\r\n          />\r\n        </div>\r\n        \r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Documentation;\r\n","import React, { createContext, useState } from 'react';\r\n\r\nexport const TimerContext = createContext();\r\n\r\nexport const TimerProvider = (props) => {\r\n\r\n    // most timers\r\n    const [milleseconds, setMilleseconds] = useState(0);\r\n    const [seconds, setSeconds] = useState(0);\r\n    const [minutes, setMinutes] = useState(0);\r\n    const [hours, setHours] = useState(0);\r\n    const [totalSeconds, setTotalSeconds] = useState(0);\r\n    const [initialTime, setInitialTime] = useState(0);\r\n    const [timerID, setTimerID] = useState(0);\r\n\r\n    // tabata\r\n    const [currentState, setCurrentState] = useState(\"work\");\r\n    const [work, setWork] = useState(0);\r\n    const [rest, setRest] = useState(0);\r\n    const [initialWork, setInitialWork] = useState(0);\r\n    const [initialRest, setInitialRest] = useState(0);\r\n    const [round, setRound] = useState(1);\r\n\r\n\r\n    return (\r\n        \r\n        <TimerContext.Provider\r\n            value={{\r\n                milleseconds, setMilleseconds,\r\n                seconds, setSeconds,\r\n                minutes, setMinutes,\r\n                hours, setHours,\r\n                totalSeconds, setTotalSeconds,\r\n                initialTime, setInitialTime,\r\n                timerID, setTimerID,\r\n                currentState, setCurrentState,\r\n                work, setWork,\r\n                rest, setRest,\r\n                initialWork, setInitialWork,\r\n                initialRest, setInitialRest,\r\n                round, setRound\r\n            }}\r\n        >\r\n            {props.children}\r\n        </TimerContext.Provider>\r\n        \r\n    );\r\n}","import React, { createContext, useState } from \"react\";\r\n\r\nexport const MenuContext = createContext();\r\n\r\nexport const MenuProvider = (props) => {\r\n  const [stopwatch, setStopwatch] = useState(false);\r\n  const [countdown, setCountdown] = useState(false);\r\n  const [xy, setXY] = useState(false);\r\n  const [tabata, setTabata] = useState(false);\r\n  const [menu, setMenu] = useState(true);\r\n\r\n  return (\r\n    <MenuContext.Provider\r\n      value={{\r\n        stopwatch,\r\n        setStopwatch,\r\n        xy,\r\n        setXY,\r\n        tabata,\r\n        setTabata,\r\n        menu,\r\n        setMenu,\r\n        countdown,\r\n        setCountdown,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </MenuContext.Provider>\r\n  );\r\n};\r\n","import React, {useContext, useState, useEffect, useRef} from \"react\";\r\nimport FlexRow from \"../generic/FlexDivs/FlexRow\";\r\nimport Background from \"../generic/Background/Background\";\r\nimport NeonParagraph from \"../generic/Paragraph/NeonParagraph\";\r\nimport NeonButton from \"../generic/Button/NeonButtons\";\r\nimport { TimerContext } from \"../Context/TimersContext\";\r\nimport { MenuContext } from \"../Context/MenuContext\";\r\nimport FlexColumn from \"../generic/FlexDivs/FlexColumn\";\r\n\r\nconst Stopwatch = props => {\r\n  const { milleseconds, setMilleseconds } = useContext(TimerContext);\r\n  const { seconds, setSeconds } = useContext(TimerContext);\r\n  const { minutes, setMinutes } = useContext(TimerContext);\r\n  const { hours, setHours } = useContext(TimerContext);\r\n  const { totalSeconds, setTotalSeconds } = useContext(TimerContext);\r\n     \r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  let timer = useRef(null);\r\n\r\n  const {setMenu} = useContext(MenuContext);\r\n  const {setStopwatch} = useContext(MenuContext);\r\n  const [completed, setCompleted] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setStopwatch(false);\r\n    setMenu(true);\r\n  }\r\n\r\n  const toggleCompleted = () => {\r\n    setCompleted(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(isActive) {\r\n    timer.current = setInterval(() => {\r\n      const seconds = totalSeconds + .01;\r\n      setTotalSeconds(seconds)\r\n      convertSecondsToTimer(seconds);\r\n    }, 10);\r\n\r\n    return () => {\r\n      clearInterval(timer.current);\r\n    };\r\n  }\r\n  }, [isActive, totalSeconds]);\r\n\r\n    // Convert seconds into days, hours, minutes, and seconds for the countdown presentation\r\n\r\n    const convertSecondsToTimer = (ConvertedSeconds) => {\r\n      setHours(Math.floor(ConvertedSeconds / 3600));\r\n      const hoursRemainder = ConvertedSeconds % 3600;\r\n      setMinutes(Math.floor(hoursRemainder / 60));\r\n      const minutesRemainder = hoursRemainder % 60;\r\n      setSeconds(Math.floor(minutesRemainder / 1));\r\n      const secondsRemainder = minutesRemainder % 1;\r\n      setMilleseconds(Math.floor(secondsRemainder / .01));\r\n    }\r\n\r\n\r\n  \r\n    const start = () => {\r\n      setIsActive(true);\r\n      \r\n    }\r\n\r\n    const stop = () => {\r\n      setIsActive(false);\r\n      clearInterval(timer.current);\r\n    }\r\n\r\n    const restart = () => {\r\n      setTotalSeconds(0);\r\n      setIsActive(false);\r\n      clearInterval(timer.current);\r\n      convertSecondsToTimer(0);\r\n      setCompleted(true);\r\n    }\r\n\r\n\r\n    return (\r\n      <>\r\n        {!completed && <Background centered=\"true\" width=\"300px\" padding=\"20px\">\r\n          <FlexRow height=\"25%\" centered=\"true\">\r\n          <NeonParagraph color=\"#00C0F9\" size=\"24px\">Stopwatch</NeonParagraph>\r\n          </FlexRow>\r\n          <FlexRow height=\"25%\" spaceEvenly=\"true\" width=\"auto\"centered=\"true\">\r\n            <NeonButton className=\"display\" disabled=\"true\" width=\"40px\" height=\"40px\">{hours}h</NeonButton>\r\n            <NeonButton className=\"display\" disabled=\"true\" width=\"40px\" height=\"40px\">{minutes}m</NeonButton>\r\n            <NeonButton className=\"display\" disabled=\"true\" width=\"40px\" height=\"40px\">{seconds}s</NeonButton>\r\n            <NeonButton className=\"display\" disabled=\"true\" width=\"40px\" height=\"40px\">{milleseconds}ms</NeonButton>\r\n          </FlexRow>\r\n          <FlexRow height=\"25%\" padding=\"10px\" width=\"100%\" centered=\"true\">\r\n            <NeonButton className=\"StartButton\" onClick={start} width=\"30%\" height=\"50px\">Start</NeonButton>\r\n            <NeonButton className=\"PauseButton\" onClick={stop} width=\"30%\" height=\"50px\">Pause</NeonButton>\r\n            <NeonButton className=\"RestartButton\" onClick={restart} width=\"20%\" height=\"50px\">&#8634;</NeonButton>\r\n          </FlexRow>\r\n        </Background>}\r\n        {completed && (\r\n        <Background centered=\"true\" width=\"300px\" padding=\"20px\">\r\n          <NeonParagraph>Completed</NeonParagraph>\r\n          <FlexRow>\r\n            <FlexColumn>\r\n              <NeonParagraph>Return To Menu</NeonParagraph>\r\n              <NeonButton onClick={toggleMenu}>O</NeonButton>\r\n            </FlexColumn>\r\n            <FlexColumn>\r\n              <NeonParagraph>Set New Stopwatch</NeonParagraph>\r\n              <NeonButton onClick={toggleCompleted}>O</NeonButton>\r\n            </FlexColumn>\r\n          </FlexRow>\r\n        </Background>\r\n      )}\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Stopwatch;\r\n","import React from \"react\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport FlexRow from \"../generic/FlexDivs/FlexRow\";\r\nimport Background from \"../generic/Background/Background\";\r\nimport Incrementer from \"../generic/Incrementer/Incrementer\";\r\nimport NeonParagraph from \"../generic/Paragraph/NeonParagraph\";\r\nimport NeonButton from \"../generic/Button/NeonButtons\";\r\nimport { TimerContext } from \"../Context/TimersContext\";\r\nimport FlexColumn from \"../generic/FlexDivs/FlexColumn\";\r\nimport { MenuContext } from \"../Context/MenuContext\";\r\nconst Countdown = (props) => {\r\n  const { seconds, setSeconds } = useContext(TimerContext);\r\n  const { minutes, setMinutes } = useContext(TimerContext);\r\n  const { hours, setHours } = useContext(TimerContext);\r\n  const { totalSeconds, setTotalSeconds } = useContext(TimerContext);\r\n  const { initialTime, setInitialTime } = useContext(TimerContext);\r\n  const {setTimerID } = useContext(TimerContext);\r\n\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  const [showUI, setShowUI] = useState(false);\r\n\r\n  const {setMenu} = useContext(MenuContext);\r\n  const {setCountdown} = useContext(MenuContext);\r\n  const [completed, setCompleted] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setCountdown(false);\r\n    setMenu(true);\r\n  }\r\n\r\n  const toggleCompleted = () => {\r\n    setCompleted(false);\r\n  }\r\n\r\n  let timer = useRef(null);\r\n\r\n  useEffect(() => {\r\n    timer.current = setInterval(() => {\r\n      if (isActive) {\r\n        if (totalSeconds > 0) {\r\n          const seconds = totalSeconds - 1;\r\n          setTotalSeconds(seconds);\r\n          convertSecondsToTimer(seconds);\r\n\r\n          console.log(totalSeconds);\r\n        } else {\r\n          setShowUI(false);\r\n          setCompleted(true);\r\n          clearInterval(timer.current);\r\n        }\r\n      }\r\n    }, 1000);\r\n    setTimerID(timer);\r\n\r\n    return () => {\r\n      clearInterval(timer.current);\r\n    };\r\n  }, [isActive, totalSeconds]);\r\n\r\n  useEffect(() => {}, [showUI]);\r\n\r\n  const convertTimerToSeconds = () => {\r\n    const totalSeconds = hours * 3600 + minutes * 60 + seconds;\r\n    return totalSeconds;\r\n  };\r\n\r\n  // Convert seconds into days, hours, minutes, and seconds for the countdown presentation\r\n\r\n  const convertSecondsToTimer = (ConvertedSeconds) => {\r\n    setHours(Math.floor(ConvertedSeconds / 3600));\r\n    const hoursRemainder = ConvertedSeconds % 3600;\r\n    setMinutes(Math.floor(hoursRemainder / 60));\r\n    setSeconds(hoursRemainder % 60);\r\n  };\r\n\r\n  const start = () => {\r\n    const initialSeconds = convertTimerToSeconds();\r\n    if (initialSeconds > 0) {\r\n      setShowUI(true);\r\n      setIsActive(true);\r\n      setInitialTime(initialSeconds);\r\n      setTotalSeconds(convertTimerToSeconds());\r\n    }\r\n  };\r\n\r\n  const stop = () => {\r\n    setShowUI(false);\r\n    clearInterval(timer.current);\r\n  };\r\n\r\n  const restart = () => {\r\n    setShowUI(false);\r\n    clearInterval(timer.current);\r\n    convertSecondsToTimer(initialTime);\r\n  };\r\n\r\n  const clear = () => {\r\n    setShowUI(false);\r\n    clearInterval(timer.current);\r\n    convertSecondsToTimer(0);\r\n  };\r\n\r\n  // Turn off setInterval when reloading\r\n\r\n  // this.componentWillUnmount = () => {\r\n  //   clearInterval(this.state.timerID);\r\n  // }\r\n\r\n  // this.componentDidMount = () => {\r\n  //   clearInterval(this.state.timerID);\r\n  // }\r\n\r\n  return (\r\n    // Convert all of the days, hours, minutes, and seconds into seconds so we can more easily process the data\r\n\r\n    <>\r\n      {!completed && (\r\n        <Background centered=\"true\" width=\"300px\" padding=\"20px\">\r\n          <FlexRow height=\"25%\" centered=\"true\">\r\n            <NeonParagraph color=\"#00C0F9\" size=\"24px\">\r\n              Countdown\r\n            </NeonParagraph>\r\n          </FlexRow>\r\n          <FlexRow\r\n            height=\"25%\"\r\n            padding=\"10px\"\r\n            spaceEvenly=\"true\"\r\n            centered=\"true\"\r\n            width=\"100%\"\r\n          >\r\n            <Incrementer\r\n              width=\"30px\"\r\n              height=\"30px\"\r\n              max=\"24\"\r\n              min=\"0\"\r\n              scale=\"h\"\r\n              addZeros={2}\r\n              value={hours}\r\n              onChange={setHours}\r\n            />\r\n            <Incrementer\r\n              width=\"30px\"\r\n              height=\"30px\"\r\n              max=\"60\"\r\n              min=\"0\"\r\n              scale=\"m\"\r\n              addZeros={2}\r\n              value={minutes}\r\n              onChange={setMinutes}\r\n            />\r\n            <Incrementer\r\n              width=\"30px\"\r\n              height=\"30px\"\r\n              max=\"60\"\r\n              min=\"0\"\r\n              scale=\"s\"\r\n              addZeros={2}\r\n              value={seconds}\r\n              onChange={setSeconds}\r\n            />\r\n          </FlexRow>\r\n          <FlexRow\r\n            padding=\"10px\"\r\n            width=\"100%\"\r\n            spaceEvenly=\"true\"\r\n            centered=\"true\"\r\n          >\r\n            {!showUI && (\r\n              <NeonButton\r\n                className=\"StartButton\"\r\n                onClick={start}\r\n                width=\"100%\"\r\n                height=\"50px\"\r\n              >\r\n                Start\r\n              </NeonButton>\r\n            )}\r\n            {showUI && (\r\n              <NeonButton\r\n                className=\"PauseButton\"\r\n                onClick={stop}\r\n                width=\"30%\"\r\n                height=\"50px\"\r\n              >\r\n                Pause\r\n              </NeonButton>\r\n            )}\r\n            {showUI && (\r\n              <NeonButton\r\n                className=\"RestartButton\"\r\n                onClick={restart}\r\n                width=\"20%\"\r\n                height=\"50px\"\r\n              >\r\n                &#8634;\r\n              </NeonButton>\r\n            )}\r\n          </FlexRow>\r\n          <FlexRow\r\n            padding=\"10px\"\r\n            width=\"100%\"\r\n            spaceEvenly=\"true\"\r\n            centered=\"true\"\r\n          >\r\n            <NeonButton\r\n              className=\"ClearButton\"\r\n              onClick={clear}\r\n              width=\"100%\"\r\n              height=\"50px\"\r\n            >\r\n              Clear\r\n            </NeonButton>\r\n          </FlexRow>\r\n        </Background>\r\n      )}\r\n      {completed && (\r\n        <Background centered=\"true\" width=\"300px\" padding=\"20px\">\r\n          <NeonParagraph>Completed</NeonParagraph>\r\n          <FlexRow>\r\n            <FlexColumn>\r\n              <NeonParagraph>Return To Menu</NeonParagraph>\r\n              <NeonButton onClick={toggleMenu}>O</NeonButton>\r\n            </FlexColumn>\r\n            <FlexColumn>\r\n              <NeonParagraph>Set New Countdown</NeonParagraph>\r\n              <NeonButton onClick={toggleCompleted}>O</NeonButton>\r\n            </FlexColumn>\r\n          </FlexRow>\r\n        </Background>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Countdown;\r\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport FlexColumn from \"../generic/FlexDivs/FlexColumn\";\r\nimport FlexRow from \"../generic/FlexDivs/FlexRow\";\r\nimport Background from \"../generic/Background/Background\";\r\nimport Incrementer from \"../generic/Incrementer/Incrementer\";\r\nimport NeonParagraph from \"../generic/Paragraph/NeonParagraph\";\r\nimport NeonButton from \"../generic/Button/NeonButtons\";\r\nimport { TimerContext } from \"../Context/TimersContext\";\r\nimport { MenuContext } from \"../Context/MenuContext\";\r\n\r\nconst XY = (props) => {\r\n  const { round, setRound } = useContext(TimerContext);\r\n  const { seconds, setSeconds } = useContext(TimerContext);\r\n  const { minutes, setMinutes } = useContext(TimerContext);\r\n  const { hours, setHours } = useContext(TimerContext);\r\n  const { totalSeconds, setTotalSeconds } = useContext(TimerContext);\r\n  const { initialTime, setInitialTime } = useContext(TimerContext);\r\n\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  const [setShowUI] = useState(false);\r\n\r\n  let timer = useRef(null);\r\n\r\n  \r\n  const {setMenu} = useContext(MenuContext);\r\n  const {setXY} = useContext(MenuContext);\r\n  const [completed, setCompleted] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setXY(false);\r\n    setMenu(true);\r\n  }\r\n\r\n  const toggleCompleted = () => {\r\n    setCompleted(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    timer.current = setInterval(() => {\r\n      if (isActive) {\r\n        \r\n        if (totalSeconds > 0) {\r\n          const seconds = totalSeconds - 1;\r\n          setTotalSeconds(seconds);\r\n          convertSecondsToTimer(seconds);\r\n        } else {\r\n          if (round > 1) {\r\n            const currRound = round - 1;\r\n            setRound(currRound);\r\n            convertSecondsToTimer(initialTime);\r\n          } else {\r\n            setCompleted(true);\r\n            stop();\r\n          }\r\n        }\r\n      }\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(timer.current);\r\n    };\r\n  }, [isActive, totalSeconds]);\r\n\r\n  // Convert all of the days, hours, minutes, and seconds into seconds so we can more easily process the data\r\n\r\n  const convertTimerToSeconds = () => {\r\n    const totalSeconds = hours * 3600 + minutes * 60 + seconds;\r\n    return totalSeconds;\r\n  };\r\n\r\n  // Convert seconds into days, hours, minutes, and seconds for the countdown presentation\r\n\r\n  const convertSecondsToTimer = (ConvertedSeconds) => {\r\n    setHours(Math.floor(ConvertedSeconds / 3600));\r\n    console.log(\"hours \" + Math.floor(ConvertedSeconds / 3600))\r\n    const hoursRemainder = ConvertedSeconds % 3600;\r\n    setMinutes(Math.floor(hoursRemainder / 60));\r\n    console.log(\"minutes \" + Math.floor(hoursRemainder / 60))\r\n    setSeconds(hoursRemainder % 60);\r\n    console.log(\"minutes \" + hoursRemainder % 60)\r\n  };\r\n\r\n  // Buttons Start\r\n  //\r\n\r\n  const start = () => {\r\n    const initialSeconds = convertTimerToSeconds();\r\n    setInitialTime(initialSeconds);\r\n    setTotalSeconds(convertTimerToSeconds())\r\n    setIsActive(true);\r\n  };\r\n\r\n  const stop = () => {\r\n    setShowUI(false);\r\n    clearInterval(timer.current);\r\n  };\r\n\r\n  const restart = () => {\r\n    setShowUI(false);\r\n    clearInterval(timer.current);\r\n    convertSecondsToTimer(initialTime);\r\n  };\r\n\r\n  const clear = () => {\r\n    setShowUI(false);\r\n    clearInterval(timer.current);\r\n    convertSecondsToTimer(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!completed && <Background centered=\"true\" width=\"300px\" padding=\"20px\">\r\n        <FlexRow height=\"25%\" centered=\"true\">\r\n          <NeonParagraph color=\"#00C0F9\" size=\"24px\">\r\n            XY\r\n          </NeonParagraph>\r\n        </FlexRow>\r\n        <FlexRow height=\"25%\" padding=\"10px\" width=\"100%\">\r\n          <NeonParagraph color=\"#00C0F9\">Round</NeonParagraph>\r\n          <Incrementer value={round} onChange={setRound} width=\"30px\" height=\"30px\" max=\"10\" min=\"1\" />\r\n        </FlexRow>\r\n        <FlexRow height=\"25%\" padding=\"10px\" spaceEvenly=\"true\" width=\"100%\">\r\n          <Incrementer\r\n          value={hours}\r\n          onChange={setHours}\r\n            width=\"30px\"\r\n            height=\"30px\"\r\n            max=\"24\"\r\n            min=\"0\"\r\n            scale=\"h\"\r\n            addZeros=\"2\"\r\n          />\r\n          <Incrementer\r\n          value={minutes}\r\n          onChange={setMinutes}\r\n            width=\"30px\"\r\n            height=\"30px\"\r\n            max=\"60\"\r\n            min=\"0\"\r\n            scale=\"m\"\r\n            addZeros=\"2\"\r\n          />\r\n          <Incrementer\r\n          value={seconds}\r\n          onChange={setSeconds}\r\n            width=\"30px\"\r\n            height=\"30px\"\r\n            max=\"60\"\r\n            min=\"0\"\r\n            scale=\"s\"\r\n            addZeros=\"2\"\r\n          />\r\n        </FlexRow>\r\n        <FlexRow height=\"25%\" padding=\"10px\" width=\"100%\" centered=\"true\">\r\n          <NeonButton\r\n            className=\"StartButton\"\r\n            onClick={start}\r\n            width=\"30%\"\r\n            height=\"50px\"\r\n          >\r\n            Start\r\n          </NeonButton>\r\n          <NeonButton\r\n            className=\"PauseButton\"\r\n            onClick={stop}\r\n            width=\"30%\"\r\n            height=\"50px\"\r\n          >\r\n            Pause\r\n          </NeonButton>\r\n          <NeonButton\r\n            className=\"RestartButton\"\r\n            onClick={restart}\r\n            width=\"20%\"\r\n            height=\"50px\"\r\n          >\r\n            &#8634;\r\n          </NeonButton>\r\n        </FlexRow>\r\n        <FlexRow\r\n          height=\"25%\"\r\n          padding=\"10px\"\r\n          width=\"100%\"\r\n          spaceEvenly=\"true\"\r\n          centered=\"true\"\r\n        >\r\n          <NeonButton\r\n            className=\"ClearButton\"\r\n            onClick={clear}\r\n            width=\"100%\"\r\n            height=\"50px\"\r\n          >\r\n            Clear\r\n          </NeonButton>\r\n        </FlexRow>\r\n      </Background>}\r\n      {completed && (\r\n        <Background centered=\"true\" width=\"300px\" padding=\"20px\">\r\n          <NeonParagraph>Completed</NeonParagraph>\r\n          <FlexRow>\r\n            <FlexColumn>\r\n              <NeonParagraph>Return To Menu</NeonParagraph>\r\n              <NeonButton onClick={toggleMenu}>O</NeonButton>\r\n            </FlexColumn>\r\n            <FlexColumn>\r\n              <NeonParagraph>Set New XY Timer</NeonParagraph>\r\n              <NeonButton onClick={toggleCompleted}>O</NeonButton>\r\n            </FlexColumn>\r\n          </FlexRow>\r\n        </Background>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default XY;\r\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport FlexColumn from \"../generic/FlexDivs/FlexColumn\";\r\nimport FlexRow from \"../generic/FlexDivs/FlexRow\";\r\nimport Background from \"../generic/Background/Background\";\r\nimport Incrementer from \"../generic/Incrementer/Incrementer\";\r\nimport NeonParagraph from \"../generic/Paragraph/NeonParagraph\";\r\nimport NeonButton from \"../generic/Button/NeonButtons\";\r\nimport { TimerContext } from \"../Context/TimersContext\";\r\nimport { MenuContext } from \"../Context/MenuContext\";\r\n\r\nconst Tabata = (props) => {\r\n  const { work, setWork } = useContext(TimerContext);\r\n  const { rest, setRest } = useContext(TimerContext);\r\n  const { initialWork, setInitialWork } = useContext(TimerContext);\r\n  const { initialRest, setInitialRest } = useContext(TimerContext);\r\n  const { round, setRound } = useContext(TimerContext);\r\n\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  let timer = useRef(null);\r\n\r\n  const {setMenu} = useContext(MenuContext);\r\n  const {setTabata} = useContext(MenuContext);\r\n  const [completed, setCompleted] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setTabata(false);\r\n    setMenu(true);\r\n  }\r\n\r\n  const toggleCompleted = () => {\r\n    setCompleted(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    timer.current = setInterval(() => {\r\n      if (isActive) {\r\n        if (work > 0) {\r\n          const workSeconds = work - 1;\r\n          setWork(workSeconds);\r\n        } \r\n        else if(rest > 0) {\r\n          const restSeconds = rest - 1;\r\n          setRest(restSeconds);\r\n        }\r\n        else if(round > 1){\r\n          const currRound = round - 1;\r\n          setRound(currRound);\r\n          setWork(initialWork);\r\n          setRest(initialRest);\r\n        }\r\n        else {\r\n          setCompleted(true);\r\n          stop();\r\n        }\r\n      }\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(timer.current);\r\n    };\r\n  }, [isActive, round, rest, work]);\r\n\r\n  const start = () => {\r\n    setInitialWork(work);\r\n    setInitialRest(rest);\r\n    setIsActive(true);\r\n    \r\n  };\r\n\r\n  const stop = () => {\r\n    clearInterval(timer.current);\r\n    setIsActive(false);\r\n  };\r\n\r\n  const restart = () => {\r\n    clearInterval(timer.current);\r\n    setWork(initialWork);\r\n    setRest(initialRest);\r\n    setIsActive(false);\r\n  };\r\n\r\n  const clear = () => {\r\n    clearInterval(timer.current);\r\n    setWork(0);\r\n    setRest(0);\r\n    setIsActive(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!completed && <Background centered=\"true\" height=\"500px\" width=\"300px\" padding=\"20px\">\r\n        <NeonParagraph padding=\"10px\" height=\"10%\" color=\"#00C0F9\" size=\"36px\">\r\n          Tabata\r\n        </NeonParagraph>\r\n\r\n        <NeonParagraph padding=\"10px\" height=\"10%\" color=\"#00C0F9\" size=\"18px\">\r\n          Round\r\n        </NeonParagraph>\r\n        <Incrementer\r\n          value={round}\r\n          onChange={setRound}\r\n          padding=\"10px\"\r\n          width=\"30px\"\r\n          height=\"auto\"\r\n          max=\"60\"\r\n          min=\"1\"\r\n        />\r\n\r\n        <FlexRow width=\"100%\" height=\"20%\" padding=\"10px\">\r\n          <NeonParagraph margin=\"10px\" color=\"#00C0F9\" size=\"14px\">\r\n            Work\r\n          </NeonParagraph>\r\n          <Incrementer\r\n            value={work}\r\n            onChange={setWork}\r\n            width=\"50px\"\r\n            height=\"auto\"\r\n            max=\"60\"\r\n            min=\"0\"\r\n            scale=\"s\"\r\n            addZeros=\"2\"\r\n          />\r\n          <Incrementer\r\n            value={rest}\r\n            onChange={setRest}\r\n            width=\"50px\"\r\n            height=\"auto\"\r\n            max=\"60\"\r\n            min=\"0\"\r\n            scale=\"s\"\r\n            addZeros=\"2\"\r\n          />\r\n          <NeonParagraph padding=\"10px\" color=\"#00C0F9\" size=\"14px\">\r\n            Rest\r\n          </NeonParagraph>\r\n        </FlexRow>\r\n        <FlexRow height=\"30%\" width=\"100%\">\r\n          <FlexRow\r\n            padding=\"10px\"\r\n            height=\"50%\"\r\n            width=\"100%\"\r\n            centered=\"true\"\r\n            spaceEvenly=\"true\"\r\n            centered=\"true\"\r\n          >\r\n            <NeonButton\r\n              onClick={start}\r\n              className=\"StartButton\"\r\n              width=\"30%\"\r\n              height=\"50px\"\r\n            >\r\n              start\r\n            </NeonButton>\r\n            <NeonButton\r\n              onClick={stop}\r\n              className=\"PauseButton\"\r\n              width=\"30%\"\r\n              height=\"50px\"\r\n            >\r\n              pause\r\n            </NeonButton>\r\n            <NeonButton\r\n              onClick={restart}\r\n              className=\"RestartButton\"\r\n              width=\"20%\"\r\n              height=\"50px\"\r\n            >\r\n              &#8634;\r\n            </NeonButton>\r\n          </FlexRow>\r\n          <FlexRow\r\n            padding=\"10px\"\r\n            height=\"50%\"\r\n            width=\"100%\"\r\n            spaceEvenly=\"true\"\r\n            centered=\"true\"\r\n          >\r\n            <NeonButton\r\n              onClick={clear}\r\n              className=\"ClearButton\"\r\n              width=\"100%\"\r\n              height=\"50px\"\r\n            >\r\n              Clear\r\n            </NeonButton>\r\n          </FlexRow>\r\n        </FlexRow>\r\n      </Background>}\r\n      {completed && (\r\n        <Background centered=\"true\" width=\"300px\" padding=\"20px\">\r\n          <NeonParagraph>Completed</NeonParagraph>\r\n          <FlexRow>\r\n            <FlexColumn>\r\n              <NeonParagraph>Return To Menu</NeonParagraph>\r\n              <NeonButton onClick={toggleMenu}>O</NeonButton>\r\n            </FlexColumn>\r\n            <FlexColumn>\r\n              <NeonParagraph>Set New Tabata</NeonParagraph>\r\n              <NeonButton onClick={toggleCompleted}>O</NeonButton>\r\n            </FlexColumn>\r\n          </FlexRow>\r\n        </Background>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tabata;\r\n","import React, {useContext } from \"react\";\r\n\r\nimport Stopwatch from \"../components/timers/Stopwatch\";\r\nimport Countdown from \"../components/timers/Countdown\";\r\nimport XY from \"../components/timers/XY\";\r\nimport Tabata from \"../components/timers/Tabata\";\r\nimport Background from \"../components/generic/Background/Background\";\r\nimport NeonParagraph from \"../components/generic/Paragraph/NeonParagraph\";\r\nimport NeonButton from \"../components/generic/Button/NeonButtons\";\r\nimport FlexColumn from \"../components/generic/FlexDivs/FlexColumn\";\r\nimport FlexRow from \"../components/generic/FlexDivs/FlexRow\";\r\nimport { MenuContext } from \"../components/Context/MenuContext\";\r\n\r\n\r\nfunction App() {\r\n  const {stopwatch, setStopwatch} = useContext(MenuContext);\r\n  const {countdown, setCountdown} = useContext(MenuContext);\r\n  const {xy, setXY} = useContext(MenuContext);\r\n  const {tabata, setTabata} = useContext(MenuContext);\r\n  const {menu, setMenu} = useContext(MenuContext);\r\n\r\n  // I am not sure how to make a child component run a generic function taking in parameters\r\n  // const toggle = (value, setter) => {\r\n  //   setter(!value);\r\n  // }\r\n\r\n  const toggleStopwatch = () => {\r\n    setStopwatch(!stopwatch);\r\n    setMenu(false);\r\n  };\r\n  const toggleCountdown = () => {\r\n    setCountdown(!countdown);\r\n    setMenu(false);\r\n  };\r\n  const toggleXY = () => {\r\n    setXY(!xy);\r\n    setMenu(false);\r\n  };\r\n  const toggleTabata = () => {\r\n    setTabata(!tabata);\r\n    setMenu(false);\r\n  };\r\n  return (\r\n    <>\r\n      {menu && (\r\n        <Background>\r\n          <NeonParagraph color=\"red\">Choose Timer</NeonParagraph>\r\n          <FlexRow width=\"100%\" spaceEvenly=\"true\">\r\n            <FlexColumn width=\"40%\">\r\n              <NeonParagraph color=\"white\">StopWatch</NeonParagraph>\r\n              <NeonButton onClick={toggleStopwatch}>O</NeonButton>\r\n              <NeonParagraph color=\"white\">XY</NeonParagraph>\r\n              <NeonButton onClick={toggleXY}>O</NeonButton>\r\n            </FlexColumn>\r\n            <FlexColumn width=\"50%\">\r\n              <NeonParagraph color=\"white\">Tabata</NeonParagraph>\r\n              <NeonButton onClick={toggleTabata}>O</NeonButton>\r\n              <NeonParagraph color=\"white\">Countdown</NeonParagraph>\r\n              <NeonButton onClick={toggleCountdown}>O</NeonButton>\r\n            </FlexColumn>\r\n          </FlexRow>\r\n        </Background>\r\n      )}\r\n      {stopwatch && <Stopwatch></Stopwatch>}\r\n      {xy && <XY></XY>}\r\n      {countdown && <Countdown></Countdown>}\r\n      {tabata && <Tabata></Tabata>}\r\n    </>\r\n    // <Timers>\r\n    //   {timers.map((timer) => (\r\n    //     <Timer>\r\n    //       <TimerTitle>{timer.title}</TimerTitle>\r\n    //       {timer.C}\r\n    //     </Timer>\r\n    //   ))}\r\n    // </Timers>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport DocumentationView from \"./views/DocumentationView\";\r\nimport TimersView from \"./views/TimersView\";\r\nimport { TimerProvider } from \"./components/Context/TimersContext\";\r\nimport { MenuProvider } from \"./components/Context/MenuContext\";\r\nconst Container = styled.div`\r\n  background: #f0f6fb;\r\n  height: 100vh;\r\n  overflow: auto;\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <MenuProvider>\r\n        <TimerProvider>\r\n          <Router>\r\n            <nav>\r\n              <ul>\r\n                <li>\r\n                  <Link to=\"/\">Timers</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/docs\">Documentation</Link>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n            <Switch>\r\n              <Route path=\"/docs\">\r\n                <DocumentationView />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <TimersView />\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </TimerProvider>\r\n      </MenuProvider>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}